@inherits LayoutComponentBase
@inject IYouTrackService _youTrackService
@inject IAzureDevOpsService _azureDevOpsService

<nav class="navbar navbar-light bg-white shadow">
    <div class="container-fluid p-0">
        <a class="navbar-brand" href="/">
            @if (_youTrackUser is not null)
            {
                <img src="@_youTrackUser.AvatarUrl " width="30" height="30" class="d-inline-block align-top rounded-circle mr-2">
            }
            else
            {
                <img src="logo.svg" width="30" height="30" class="d-inline-block align-top rounded-circle mr-2">
            }

            <b>Werk!</b>
            @if (_youTrackUser is not null)
            {
                <i class="text-muted">&nbsp;Personalized for @_youTrackUser.FullName</i>
            }
        </a>
    </div>
</nav>

<main class="container-fluid my-3">
    @Body
</main>

<footer class="bg-white shadow py-3">
    <div class="container-fluid text-center">
        <p class="text-muted">
            <span title="@GetIntegrationTitle(_youTrackServiceStatus)" class="@GetIntegrationClass(_youTrackServiceStatus)">YouTrack</span>
            &nbsp;&bull;&nbsp;
            <span title="@GetIntegrationTitle(_azureDevOpsServiceStatus)" class="@GetIntegrationClass(_azureDevOpsServiceStatus)">Azure DevOps</span>
        </p>
    </div>
</footer>

@code{
    private WerkServiceStatus _youTrackServiceStatus;

    private WerkServiceStatus _azureDevOpsServiceStatus;

    private YouTrackUser _youTrackUser;

    protected override async Task OnInitializedAsync()
    {
        _youTrackServiceStatus = await _youTrackService.GetStatus();
        _azureDevOpsServiceStatus = await _azureDevOpsService.GetStatus();

        if (_youTrackServiceStatus == WerkServiceStatus.Ready)
        {
            _youTrackUser = await _youTrackService.FetchMe();
        }
    }

    private string GetIntegrationClass(WerkServiceStatus serviceStatus) => serviceStatus switch
    {
        WerkServiceStatus.Ready => "text-success",
        WerkServiceStatus.NotReady => "text-danger",
        _ => "text-muted"
    };

    private string GetIntegrationTitle(WerkServiceStatus serviceStatus) => serviceStatus switch
    {
        WerkServiceStatus.Ready => "Integration is ready",
        WerkServiceStatus.NotReady => "Integration is NOT ready, check config",
        _ => "Disabled"
    };
}